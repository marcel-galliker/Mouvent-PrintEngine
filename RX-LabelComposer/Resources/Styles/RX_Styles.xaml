<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:RxCommon="clr-namespace:RX_LabelComposer.Common"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:rx="clr-namespace:RX_LabelComposer.External">

    <!-- General settings ______________________________________________________________-->
    <System:Double x:Key="FontSize">14.66</System:Double>

    <SolidColorBrush x:Key="RX.ActiveColumn"    Color="AliceBlue"/>
    
    <!-- radex colors _________________________________________________________________________________-->
    <SolidColorBrush x:Key="RX.Static.Background"    Color="#FFDDDDDD"/>
    <SolidColorBrush x:Key="RX.Static.Border"        Color="#FF707070"/>
    <SolidColorBrush x:Key="RX.MouseOver.Background" Color="#FFBEE6FD"/>
    <SolidColorBrush x:Key="RX.MouseOver.Border"     Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="RX.Pressed.Background"   Color="#FFC4E5F6"/>
    <SolidColorBrush x:Key="RX.Pressed.Border"       Color="#FF2C628B"/>
    <SolidColorBrush x:Key="RX.Disabled.Background"  Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="RX.Disabled.Border"      Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="RX.Disabled.Foreground"  Color="#FF838383"/>
    <SolidColorBrush x:Key="RX.Checked.Background"   Color="#FFB5E616"/>
    <SolidColorBrush x:Key="RX.Green"                Color="#FFACDE42"/>


    <!-- TableHeaderStyle ________________________________________________________________________________-->
    <Style x:Key="TableHeaderStyle" TargetType="TextBlock">
        <Setter Property="Background"   Value="LightGray" />
        <Setter Property="FontSize"     Value="16"      />
        <Setter Property="FontWeight"   Value="Bold"    />
        <Setter Property="Padding"      Value="5"       />
    </Style>

    <!-- GroupHeader ________________________________________________________________________________-->
    <Style x:Key="GroupHeader" TargetType="TextBlock">
        <Setter Property="FontSize"     Value="{StaticResource FontSize}" />
        <Setter Property="Padding"      Value="5,2" />
    </Style>

    <!-- GroupBox ________________________________________________________________________________-->
    <Style TargetType="GroupBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Grid Margin="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" Background="Silver">
                            <ContentPresenter Margin="4"
                              ContentSource="Header"
                              RecognizesAccessKey="True" />
                        </Border>
                        <Border Grid.Row="1" BorderThickness="2" Margin="0,-1,0,0" BorderBrush="Silver">
                            <ContentPresenter Margin="4" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    </Style>

    <!-- RX_ToggleButton _____________________________________________________________-->
    <Style x:Key="RX_ToggleButton" TargetType="ToggleButton">
        <Setter Property="Background"   Value="GhostWhite" />
        <Setter Property="Width"        Value="50" />
        <Setter Property="Margin"       Value="2,0" />
        <Setter Property="BorderBrush"   Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter" 
                                          ContentTemplate="{TemplateBinding ContentTemplate}" 
                                          Content="{TemplateBinding Content}" 
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                          Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background"  TargetName="border" Value="#FFC4E5F6"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type rx:RxButton}">
<!--        <Setter Property="FocusVisualStyle"             Value="{StaticResource FocusVisual}"/> -->
        <Setter Property="Background"                   Value="{StaticResource RX.Static.Background}"/>
        <Setter Property="BorderBrush"                  Value="{StaticResource RX.Static.Border}"/>
        <Setter Property="Foreground"                   Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness"              Value="1"/>
        <Setter Property="HorizontalContentAlignment"   Value="Center"/>
        <Setter Property="VerticalContentAlignment"     Value="Center"/>
        <Setter Property="Padding"                      Value="1"/>
        <Setter Property="Width"                        Value="50"/>
        <Setter Property="Height"                       Value="32"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse x:Name="circle" Width="30" Height="30" Stroke="{StaticResource RX.Static.Border}" Fill="{TemplateBinding Background}"/>
                        <ContentPresenter 
                                x:Name="contentPresenter" 
                                Focusable="False" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Margin="{TemplateBinding Padding}" 
                                RecognizesAccessKey="True" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="circle" Property="Stroke"   Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="circle" Property="Fill"     Value="{StaticResource RX.MouseOver.Background}"/>
                            <Setter TargetName="circle" Property="Stroke"   Value="{StaticResource RX.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="circle" Property="Fill"     Value="{StaticResource RX.Pressed.Background}"/>
                            <Setter TargetName="circle" Property="Stroke"   Value="{StaticResource RX.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.5"/>
                            <Setter TargetName="circle" Property="Stroke"   Value="{StaticResource RX.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource RX.Disabled.Foreground}"/>
                        </Trigger>
                        <Trigger Property="rx:RxButton.IsChecked" Value="true">
                            <Setter TargetName="circle" Property="Fill"     Value="{StaticResource RX.Checked.Background}"/>
                            <Setter TargetName="circle" Property="Stroke"   Value="{StaticResource RX.MouseOver.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Expander _______________________________________________________________________-->
    <Style TargetType="Expander">
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    </Style>

    <!-- TabControl ______________________________________________________________________-->
    <Style TargetType="TabControl">
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    </Style>

    <!-- RX_NumBox _____________________________________________________________________-->
    <Style TargetType="RxCommon:RxNumBox">
        <Setter Property="TextAlignment" Value="Right" />
    </Style>

</ResourceDictionary>
