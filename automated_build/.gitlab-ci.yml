stages:
  - build
  - deploy

#########
# Build #
#########

buildnios:
  stage: build
  variables:
  script:
  - echo "(Nios) Building git branch "%CI_COMMIT_REF_NAME%" at commit "%CI_COMMIT_SHA%" short %CI_COMMIT_SHORT_SHA%"
  - automated_build/msbuild_vsprojects.bat nios -no-pause
  artifacts:
    when: always
    expire_in: 1 month
    name: "%CI_COMMIT_REF_SLUG%_%CI_COMMIT_SHA%_NIOS"
    paths:
     - bin/*
     - automated_build/log/*

buildkeil:
  stage: build
  variables:
  script:
  - echo "(Keil) Building git branch "%CI_COMMIT_REF_NAME%" at commit "%CI_COMMIT_SHA%" short %CI_COMMIT_SHORT_SHA%"
  - automated_build/msbuild_vsprojects.bat keil -no-pause
  artifacts:
    when: always
    expire_in: 1 month
    name: "%CI_COMMIT_REF_SLUG%_%CI_COMMIT_SHA%_KEIL"
    paths:
     - bin/*
     - automated_build/log/*

buildother:
  stage: build
  variables:
  script:
  - echo "(Other) Building git branch "%CI_COMMIT_REF_NAME%" at commit "%CI_COMMIT_SHA%" short %CI_COMMIT_SHA%"
  - automated_build/msbuild_vsprojects.bat other -no-pause
  artifacts:
    when: always
    expire_in: 1 month
    name: "%CI_COMMIT_REF_SLUG%_%CI_COMMIT_SHA%_OTHER"
    paths:
     - bin/*
     - automated_build/log/*

##########
# Deploy #
##########
deploying:
 stage: deploy
 when: on_success
 variables:
   GIT_STRATEGY: none
   TARGETPATH: C:\Users\mouvent\RADEX AG\RX-Project - Documents
 before_script:
    - for /F "tokens=*" %%i in ('powershell Get-Date -Format yyyy.MM.dd.HHmmss') do set DATESTR=%%i
    - echo "The current date is %DATESTR%"
 script:
   - powershell -noprofile -noninteractive -executionpolicy Bypass -command "& 'deploy_mouventprinter.ps1'" -targetpath %TARGETPATH% -committag %CI_COMMIT_TAG% -buildname %BUILDNAME% -commitrefslug %CI_COMMIT_REF_SLUG% -commitsha %CI_COMMIT_SHA%














#stages:
#  - build
#  - deploy
#
#building:
#  stage: build
#  variables:
#   GET_SOURCES_ATTEMPTS: "3"
#   GIT_STRATEGY: clone
#  script:
#   - echo "Building git branch "${CI_COMMIT_REF_NAME}" at commit "${CI_COMMIT_SHA}" short ${CI_COMMIT_SHA}.Substring(0,8)"
#   - automated_build/msbuild_vsprojects.bat -no-pause
#  artifacts:
#   when: always
#   expire_in: 1 month
#   name: "${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}"
#   paths:
#    - bin/*
#    - automated_build/log/*
#
#deploying:
#  stage: deploy
#  when: on_success
#  variables:
#   GIT_STRATEGY: none
#   TARGETPATH: C:\Users\mouvent\RADEX AG\RX-Project - Documents
#  script:
#   - $DATESTR=get-date -format "yyyyMMdd-HHmm"
#   - if (${CI_COMMIT_TAG} -And ${CI_COMMIT_TAG}[0] -eq 'v')
#     {
#       $COMMIT_TYPE='release\' + ${CI_COMMIT_TAG}
#     }
#     elseif ($BUILDNAME -eq "nightly")
#     {
#       $COMMIT_TYPE='nightly-builds\' + ${DATESTR} + '_' + ${CI_COMMIT_REF_SLUG} + '_' + ${CI_COMMIT_SHA}
#     }
#     else
#     {
#       $COMMIT_TYPE='commits\' + ${DATESTR} + '_' + ${CI_COMMIT_REF_SLUG} + '_' + ${CI_COMMIT_SHA}
#     }
#   - echo "deploying bin to ${TARGETPATH}\${COMMIT_TYPE}.zip"
#   - 7z.exe a ${TARGETPATH}\${COMMIT_TYPE}.zip bin
#  #  - xcopy /E /Y /F bin ${TARGETPATH}\${COMMIT_TYPE}\bin\
#  #  - Remove-Item ..\* -Recurse -Force
