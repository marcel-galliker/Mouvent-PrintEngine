-- fluid_board_soc_sld_hub_controller_system_0_fabric.vhd

-- This file was auto-generated from altera_debug_fabric_hw.tcl.  If you edit it your changes
-- will probably be lost.
-- 
-- Generated using ACDS version 14.0 200 at 2015.12.23.13:40:20

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fluid_board_soc_sld_hub_controller_system_0_fabric is
	port (
		clk_clk             : in  std_logic                    := '0';             --     clk.clk
		reset_reset         : in  std_logic                    := '0';             --   reset.reset
		h2t_ready           : out std_logic;                                       --     h2t.ready
		h2t_valid           : in  std_logic                    := '0';             --        .valid
		h2t_data            : in  std_logic_vector(7 downto 0) := (others => '0'); --        .data
		h2t_startofpacket   : in  std_logic                    := '0';             --        .startofpacket
		h2t_endofpacket     : in  std_logic                    := '0';             --        .endofpacket
		h2t_channel         : in  std_logic_vector(0 downto 0) := (others => '0'); --        .channel
		mgmt_valid          : in  std_logic                    := '0';             --    mgmt.valid
		mgmt_data           : in  std_logic                    := '0';             --        .data
		mgmt_channel        : in  std_logic_vector(0 downto 0) := (others => '0'); --        .channel
		t2h_ready           : in  std_logic                    := '0';             --     t2h.ready
		t2h_valid           : out std_logic;                                       --        .valid
		t2h_data            : out std_logic_vector(7 downto 0);                    --        .data
		t2h_startofpacket   : out std_logic;                                       --        .startofpacket
		t2h_endofpacket     : out std_logic;                                       --        .endofpacket
		t2h_channel         : out std_logic_vector(0 downto 0);                    --        .channel
		reset_0_reset       : out std_logic;                                       -- reset_0.reset
		h2t_0_ready         : in  std_logic                    := '0';             --   h2t_0.ready
		h2t_0_valid         : out std_logic;                                       --        .valid
		h2t_0_data          : out std_logic_vector(7 downto 0);                    --        .data
		h2t_0_startofpacket : out std_logic;                                       --        .startofpacket
		h2t_0_endofpacket   : out std_logic;                                       --        .endofpacket
		t2h_0_ready         : out std_logic;                                       --   t2h_0.ready
		t2h_0_valid         : in  std_logic                    := '0';             --        .valid
		t2h_0_data          : in  std_logic_vector(7 downto 0) := (others => '0'); --        .data
		t2h_0_startofpacket : in  std_logic                    := '0';             --        .startofpacket
		t2h_0_endofpacket   : in  std_logic                    := '0'              --        .endofpacket
	);
end entity fluid_board_soc_sld_hub_controller_system_0_fabric;

architecture rtl of fluid_board_soc_sld_hub_controller_system_0_fabric is
	component fluid_board_soc_sld_hub_controller_system_0_fabric_demux is
		port (
			clk                : in  std_logic                    := 'X';             -- clk
			reset_n            : in  std_logic                    := 'X';             -- reset_n
			in_data            : in  std_logic_vector(7 downto 0) := (others => 'X'); -- data
			in_valid           : in  std_logic                    := 'X';             -- valid
			in_ready           : out std_logic;                                       -- ready
			in_startofpacket   : in  std_logic                    := 'X';             -- startofpacket
			in_endofpacket     : in  std_logic                    := 'X';             -- endofpacket
			in_channel         : in  std_logic                    := 'X';             -- channel
			out0_data          : out std_logic_vector(7 downto 0);                    -- data
			out0_valid         : out std_logic;                                       -- valid
			out0_ready         : in  std_logic                    := 'X';             -- ready
			out0_startofpacket : out std_logic;                                       -- startofpacket
			out0_endofpacket   : out std_logic;                                       -- endofpacket
			out1_data          : out std_logic_vector(7 downto 0);                    -- data
			out1_valid         : out std_logic;                                       -- valid
			out1_ready         : in  std_logic                    := 'X';             -- ready
			out1_startofpacket : out std_logic;                                       -- startofpacket
			out1_endofpacket   : out std_logic                                        -- endofpacket
		);
	end component fluid_board_soc_sld_hub_controller_system_0_fabric_demux;

	component fluid_board_soc_sld_hub_controller_system_0_fabric_mux is
		port (
			clk               : in  std_logic                    := 'X';             -- clk
			reset_n           : in  std_logic                    := 'X';             -- reset_n
			out_data          : out std_logic_vector(7 downto 0);                    -- data
			out_valid         : out std_logic;                                       -- valid
			out_ready         : in  std_logic                    := 'X';             -- ready
			out_startofpacket : out std_logic;                                       -- startofpacket
			out_endofpacket   : out std_logic;                                       -- endofpacket
			out_channel       : out std_logic;                                       -- channel
			in0_data          : in  std_logic_vector(7 downto 0) := (others => 'X'); -- data
			in0_valid         : in  std_logic                    := 'X';             -- valid
			in0_ready         : out std_logic;                                       -- ready
			in0_startofpacket : in  std_logic                    := 'X';             -- startofpacket
			in0_endofpacket   : in  std_logic                    := 'X';             -- endofpacket
			in1_data          : in  std_logic_vector(7 downto 0) := (others => 'X'); -- data
			in1_valid         : in  std_logic                    := 'X';             -- valid
			in1_ready         : out std_logic;                                       -- ready
			in1_startofpacket : in  std_logic                    := 'X';             -- startofpacket
			in1_endofpacket   : in  std_logic                    := 'X'              -- endofpacket
		);
	end component fluid_board_soc_sld_hub_controller_system_0_fabric_mux;

	component fluid_board_soc_sld_hub_controller_system_0_fabric_mgmt_demux is
		port (
			clk        : in  std_logic := 'X'; -- clk
			reset_n    : in  std_logic := 'X'; -- reset_n
			in_data    : in  std_logic := 'X'; -- data
			in_valid   : in  std_logic := 'X'; -- valid
			in_ready   : out std_logic;        -- ready
			in_channel : in  std_logic := 'X'; -- channel
			out0_data  : out std_logic;        -- data
			out0_valid : out std_logic;        -- valid
			out0_ready : in  std_logic := 'X'; -- ready
			out1_data  : out std_logic;        -- data
			out1_valid : out std_logic;        -- valid
			out1_ready : in  std_logic := 'X'  -- ready
		);
	end component fluid_board_soc_sld_hub_controller_system_0_fabric_mgmt_demux;

	component fluid_board_soc_sld_hub_controller_system_0_fabric_mgmt_time_adap is
		port (
			clk         : in  std_logic := 'X'; -- clk
			reset_n     : in  std_logic := 'X'; -- reset_n
			in_data     : in  std_logic := 'X'; -- data
			in_valid    : in  std_logic := 'X'; -- valid
			in_channel  : in  std_logic := 'X'; -- channel
			out_data    : out std_logic;        -- data
			out_valid   : out std_logic;        -- valid
			out_ready   : in  std_logic := 'X'; -- ready
			out_channel : out std_logic         -- channel
		);
	end component fluid_board_soc_sld_hub_controller_system_0_fabric_mgmt_time_adap;

	component fluid_board_soc_sld_hub_controller_system_0_fabric_mgmt_reset_0 is
		port (
			clk         : in  std_logic := 'X'; -- clk
			reset       : in  std_logic := 'X'; -- reset
			mgmt_data   : in  std_logic := 'X'; -- data
			mgmt_valid  : in  std_logic := 'X'; -- valid
			mgmt_ready  : out std_logic;        -- ready
			agent_reset : out std_logic         -- reset
		);
	end component fluid_board_soc_sld_hub_controller_system_0_fabric_mgmt_reset_0;

	signal mgmt_time_adap_out_valid   : std_logic;                    -- mgmt_time_adap:out_valid -> mgmt_demux:in_valid
	signal mgmt_time_adap_out_data    : std_logic;                    -- mgmt_time_adap:out_data -> mgmt_demux:in_data
	signal mgmt_time_adap_out_channel : std_logic;                    -- mgmt_time_adap:out_channel -> mgmt_demux:in_channel
	signal mgmt_time_adap_out_ready   : std_logic;                    -- mgmt_demux:in_ready -> mgmt_time_adap:out_ready
	signal demux_out0_endofpacket     : std_logic;                    -- demux:out0_endofpacket -> mux:in0_endofpacket
	signal demux_out0_valid           : std_logic;                    -- demux:out0_valid -> mux:in0_valid
	signal demux_out0_startofpacket   : std_logic;                    -- demux:out0_startofpacket -> mux:in0_startofpacket
	signal demux_out0_data            : std_logic_vector(7 downto 0); -- demux:out0_data -> mux:in0_data
	signal demux_out0_ready           : std_logic;                    -- mux:in0_ready -> demux:out0_ready
	signal mgmt_demux_out1_valid      : std_logic;                    -- mgmt_demux:out1_valid -> mgmt_reset_0:mgmt_valid
	signal mgmt_demux_out1_data       : std_logic;                    -- mgmt_demux:out1_data -> mgmt_reset_0:mgmt_data
	signal mgmt_demux_out1_ready      : std_logic;                    -- mgmt_reset_0:mgmt_ready -> mgmt_demux:out1_ready
	signal reset_reset_ports_inv      : std_logic;                    -- reset_reset:inv -> [demux:reset_n, mgmt_demux:reset_n, mgmt_time_adap:reset_n, mux:reset_n]

begin

	demux : component fluid_board_soc_sld_hub_controller_system_0_fabric_demux
		port map (
			clk                => clk_clk,                  --   clk.clk
			reset_n            => reset_reset_ports_inv,    -- reset.reset_n
			in_data            => h2t_data,                 --    in.data
			in_valid           => h2t_valid,                --      .valid
			in_ready           => h2t_ready,                --      .ready
			in_startofpacket   => h2t_startofpacket,        --      .startofpacket
			in_endofpacket     => h2t_endofpacket,          --      .endofpacket
			in_channel         => h2t_channel(0),           --      .channel
			out0_data          => demux_out0_data,          --  out0.data
			out0_valid         => demux_out0_valid,         --      .valid
			out0_ready         => demux_out0_ready,         --      .ready
			out0_startofpacket => demux_out0_startofpacket, --      .startofpacket
			out0_endofpacket   => demux_out0_endofpacket,   --      .endofpacket
			out1_data          => h2t_0_data,               --  out1.data
			out1_valid         => h2t_0_valid,              --      .valid
			out1_ready         => h2t_0_ready,              --      .ready
			out1_startofpacket => h2t_0_startofpacket,      --      .startofpacket
			out1_endofpacket   => h2t_0_endofpacket         --      .endofpacket
		);

	mux : component fluid_board_soc_sld_hub_controller_system_0_fabric_mux
		port map (
			clk               => clk_clk,                  --   clk.clk
			reset_n           => reset_reset_ports_inv,    -- reset.reset_n
			out_data          => t2h_data,                 --   out.data
			out_valid         => t2h_valid,                --      .valid
			out_ready         => t2h_ready,                --      .ready
			out_startofpacket => t2h_startofpacket,        --      .startofpacket
			out_endofpacket   => t2h_endofpacket,          --      .endofpacket
			out_channel       => t2h_channel(0),           --      .channel
			in0_data          => demux_out0_data,          --   in0.data
			in0_valid         => demux_out0_valid,         --      .valid
			in0_ready         => demux_out0_ready,         --      .ready
			in0_startofpacket => demux_out0_startofpacket, --      .startofpacket
			in0_endofpacket   => demux_out0_endofpacket,   --      .endofpacket
			in1_data          => t2h_0_data,               --   in1.data
			in1_valid         => t2h_0_valid,              --      .valid
			in1_ready         => t2h_0_ready,              --      .ready
			in1_startofpacket => t2h_0_startofpacket,      --      .startofpacket
			in1_endofpacket   => t2h_0_endofpacket         --      .endofpacket
		);

	mgmt_demux : component fluid_board_soc_sld_hub_controller_system_0_fabric_mgmt_demux
		port map (
			clk        => clk_clk,                    --   clk.clk
			reset_n    => reset_reset_ports_inv,      -- reset.reset_n
			in_data    => mgmt_time_adap_out_data,    --    in.data
			in_valid   => mgmt_time_adap_out_valid,   --      .valid
			in_ready   => mgmt_time_adap_out_ready,   --      .ready
			in_channel => mgmt_time_adap_out_channel, --      .channel
			out0_data  => open,                       --  out0.data
			out0_valid => open,                       --      .valid
			out0_ready => '1',                        --      .ready
			out1_data  => mgmt_demux_out1_data,       --  out1.data
			out1_valid => mgmt_demux_out1_valid,      --      .valid
			out1_ready => mgmt_demux_out1_ready       --      .ready
		);

	mgmt_time_adap : component fluid_board_soc_sld_hub_controller_system_0_fabric_mgmt_time_adap
		port map (
			clk         => clk_clk,                    --   clk.clk
			reset_n     => reset_reset_ports_inv,      -- reset.reset_n
			in_data     => mgmt_data,                  --    in.data
			in_valid    => mgmt_valid,                 --      .valid
			in_channel  => mgmt_channel(0),            --      .channel
			out_data    => mgmt_time_adap_out_data,    --   out.data
			out_valid   => mgmt_time_adap_out_valid,   --      .valid
			out_ready   => mgmt_time_adap_out_ready,   --      .ready
			out_channel => mgmt_time_adap_out_channel  --      .channel
		);

	mgmt_reset_0 : component fluid_board_soc_sld_hub_controller_system_0_fabric_mgmt_reset_0
		port map (
			clk         => clk_clk,               --          clk.clk
			reset       => reset_reset,           --        reset.reset
			mgmt_data   => mgmt_demux_out1_data,  --         mgmt.data
			mgmt_valid  => mgmt_demux_out1_valid, --             .valid
			mgmt_ready  => mgmt_demux_out1_ready, --             .ready
			agent_reset => reset_0_reset          -- reset_source.reset
		);

	reset_reset_ports_inv <= not reset_reset;

end architecture rtl; -- of fluid_board_soc_sld_hub_controller_system_0_fabric
