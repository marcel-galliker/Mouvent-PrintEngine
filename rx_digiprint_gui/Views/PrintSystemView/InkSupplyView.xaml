<UserControl x:Class="RX_DigiPrint.Views.PrintSystemView.InkSupplyView"
             xmlns      ="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x    ="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc   ="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d    ="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ig   ="http://schemas.infragistics.com/xaml" 
             xmlns:igWPF="http://schemas.infragistics.com/xaml/wpf"
             xmlns:scm  ="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:rxuc ="clr-namespace:RX_DigiPrint.Views.UserControls"
             xmlns:rx   ="clr-namespace:RX_DigiPrint.Helpers"
             xmlns:common="clr-namespace:RX_Common;assembly=rx_common_lib_cs"
             mc:Ignorable="d" 
             d:DesignHeight="300" 
             d:DesignWidth="100"
             Loaded="UserControl_Loaded"
             Unloaded="UserControl_Unloaded"
             >
    <UserControl.Resources>
        <Style x:Key="CheckBoxStyle_ON" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource OptionMark.Pressed.Background}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CheckBoxStyle_OFF" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource OptionMark.MouseOver.Background}"/> -->
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource OptionMark.Pressed.Background}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>

    <!--    <CheckBox x:Name="CheckBox" Checked="CheckBox_Checked" IsChecked="{Binding IsChecked}" Style="{StaticResource CheckBoxStyle_OFF}"> -->
    <CheckBox x:Name="CheckBox" Click="CheckBox_Clicked" IsChecked="{Binding IsChecked}" Style="{StaticResource CheckBoxStyle_OFF}">
        <Grid x:Name="SettingsGrid" Width="100"  Margin="1,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="26"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Rectangle Grid.RowSpan="10" Fill="Red" Visibility="{Binding Err, Converter={StaticResource IntToVisible_Converter}}"/>

            <!-- <TextBlock Grid.Row="0" HorizontalAlignment="Center" Text="{Binding No}"/> -->

            <!--             DropDownOpening="ComboBox_DropDownOpening" -->
            <rxuc:RxComboBoxTree x:Name="InkType" Grid.Row="0"/>

            <!-- 
            <ig:XamMultiColumnComboEditor x:Name="Color_Combo"
                Grid.Row="1" 
                VerticalAlignment="Top"
			    SelectedItem ="{Binding InkType}"
                DisplayMemberPath="Name"
			    Background="{Binding InkType, Converter={StaticResource InkType_ColorBG}}"
                Foreground="{Binding InkType, Converter={StaticResource InkType_ColorFG}}"
                AutoGenerateColumns="False"
                SelectedItemsResetButtonVisibility="Collapsed"
                Style="{DynamicResource Rx_XamMultiColumnComboEditorStyle}"
                DropDownOpening="ColorCombo_DropDownOpening"
                >
                <ig:XamMultiColumnComboEditor.Columns>
                   // <ig:TextComboColumn CellStyle="{x:Null}" HeaderTemplate="{x:Null}" HeaderStyle="{x:Null}" Key="Name" TextBlockStyle="{x:Null}"/>
                   // <ig:TextComboColumn CellStyle="{x:Null}" HeaderTemplate="{x:Null}" HeaderStyle="{x:Null}" Key="Description" TextBlockStyle="{x:Null}"/>
                    <ig:TextComboColumn Key="Family" />
                    <ig:TextComboColumn Key="Name" />
                    <ig:TextComboColumn Key="Description" />
                </ig:XamMultiColumnComboEditor.Columns>
            </ig:XamMultiColumnComboEditor>
            -->

            <rx:RxComboBox Grid.Row="1" x:Name="CB_RectoVerso" SelectedValue="{Binding RectoVerso}"/>

            <Button x:Name="CmdButton" 
                       Grid.Row="2"
                       FontSize="{StaticResource FontSizeLarge}"
                       Content="{Binding CtrlMode, Converter={StaticResource CtrlMode_Str}}"
                       Margin="0"
                       Click="Cmd_Clicked" HorizontalAlignment="Left" Width="86"
                       />
            <Button x:Name="CmdButton2"  Grid.Row="2" Content="..." HorizontalAlignment="Right" Margin="0" Click="Cmd_Clicked"/>
            <rx:RxPopup x:Name="CmdPopup" 
                   PlacementTarget="{Binding ElementName=CmdButton}"
                   Width="auto"
                   MinWidth="100" 
                   IsHitTestVisible="False"
                   OpacityMask="White"
                   >
                <Grid Background="White">
                    <GroupBox Width="150" Style="{StaticResource RxGroupBox}" Header="^">
                        <StackPanel Margin="10,2">
                      <!--  <Button                       Content="Shut Down"   Click="ShutDown_Clicked"  Padding="10" Visibility="{Binding Flushed, Converter={StaticResource BoolToInVisible_Converter}}"/> -->
                            <!--
                            <Button Content="{Binding No}" Height="40"/>
                            <Button Content="{Binding Flushed}" Height="40"/>
                            -->
                            <Button x:Name="Button_OnOff" Content="OFF"         Click="OnOff_Clicked"     Padding="10"/>
                            <Button                       Content="Print"       Click="Print_Clicked"     Padding="10" Visibility="{Binding Flushed, Converter={StaticResource BoolToInVisible_Converter}}"/>
                            <Rectangle Fill="{StaticResource RX.Green}" HorizontalAlignment="Stretch" Height="1" Margin="-16, 8"/>
                            <Button x:Name="FlushButton"  Content="Flush"       Click="Flush_Clicked"     Padding="10" Visibility="{Binding CanFlush, Converter={StaticResource BoolToVisible_Converter}}"/>
                            
                            <Button                       Content="Purge"       Click="Purge_Clicked"     Padding="10"/>
                            <Rectangle Fill="{StaticResource RX.Green}" HorizontalAlignment="Stretch" Height="1" Margin="-16, 8"/>
                            <Button                       Content="Fill"        Click="Fill_Clicked"      Padding="10" />
                            <Button                       Content="Empty"       Click="Empty_Clicked"     Padding="10" Visibility="{Binding Running, Converter={StaticResource BoolToInVisible_Converter}}"/>
                            <Rectangle x:Name="Line_Calibrate"  Fill="{StaticResource RX.Green}" HorizontalAlignment="Stretch" Height="1" Margin="-16, 8"/>
                            <Button x:Name="Button_Calibrate" Content="Calibrate"   Click="Calibrate_Clicked" Padding="10"/>
                            <Button  Content="Check"                                Click="Check_Clicked" Padding="10"/>
                        </StackPanel>
                    </GroupBox>
                </Grid>
            </rx:RxPopup>

            <rx:RxPopup x:Name="FlushPopup" 
                   PlacementTarget="{Binding ElementName=FlushButton}"
                   Width="auto"
                   MinWidth="100" 
                   IsHitTestVisible="False"
                   OpacityMask="White"
                   >
                <Grid Background="White">
                    <GroupBox Width="150" Style="{StaticResource RxGroupBox}" Header="^">
                        <StackPanel Margin="10,2">
                            <Button Content="Night"      Click="Flush_Clicked_0"     Padding="10"/>
                            <Button Content="Weekend"    Click="Flush_Clicked_1"     Padding="10"/>
                            <Button Content="Week"       Click="Flush_Clicked_1"     Padding="10"/>
                        </StackPanel>
                    </GroupBox>
                </Grid>
            </rx:RxPopup>

            <rx:RxPopup x:Name="MsgPopup" 
                   PlacementTarget="{Binding ElementName=CmdButton}"
                   Width="auto"
                   MinWidth="100" IsHitTestVisible="False"
                   OpacityMask="White"
                   >
                <Grid Background="White">
                    <GroupBox Width="150" Style="{StaticResource RxGroupBox}" Header="^">
                        <StackPanel Margin="10,2">
                            <TextBlock x:Name="MsgText" TextWrapping="Wrap"/>
                            <Button Content="Done" Click="Done_Clicked"/>
                        </StackPanel>
                    </GroupBox>
                </Grid>
            </rx:RxPopup>

            <TextBlock Grid.Row="3" HorizontalAlignment="Right" Text="{Binding CanisterLevel,  Converter={StaticResource HeadVal_ConverterTemp}}" />
            <TextBlock Grid.Row="4" HorizontalAlignment="Right" Text="{Binding Temp,           Converter={StaticResource HeadVal_ConverterTemp}}" x:Name="Temp"/>
            <Grid x:Name="ServiceGrid" Grid.Row="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="0"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

<!--                <TextBlock  Grid.Row="0" HorizontalAlignment="Right" Text="{Binding Humitity,       Converter={StaticResource HeadVal_Converter}}" /> -->
                
                <StackPanel Grid.Row="1" HorizontalAlignment="Right" Orientation="Horizontal">
                    <TextBlock  Text="{Binding CondPresIn, Converter={StaticResource HeadVal_Converter10}}" VerticalAlignment="Center" Padding="3,0"/>
                    <common:RxNumBox Text="{Binding CylinderPresSet, Converter={StaticResource HeadVal_Converter10}}" MinWidth="40" LostFocus="Pressure_LostFocus" HorizontalContentAlignment="Right"/>
                </StackPanel>
                <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right">
                    <TextBlock Text="{Binding CylinderPres,      Converter={StaticResource HeadVal_Converter}}" />
                    <TextBlock Text=" ("/>
                    <TextBlock Text="{Binding CylinderSetpoint,      Converter={StaticResource HeadVal_Converter}}"/>
                    <TextBlock Text=")"/>
                </StackPanel>
                <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Right">                    
                    <TextBlock Text="{Binding PumpSpeed,      Converter={StaticResource HeadVal_Converter}}" />
                    <TextBlock Text=" ("/>
                    <TextBlock Text="{Binding PumpSpeedSet,      Converter={StaticResource HeadVal_Converter}}"/>
                    <TextBlock Text=")"/>
                </StackPanel>
                <TextBlock Grid.Row="4" HorizontalAlignment="Right" Text="{Binding BleedValve}" />
                <TextBlock Grid.Row="5" HorizontalAlignment="Right" Text="{Binding AirCusionValve}" />
            </Grid>

            <!-- NO Connection _______________________________________________________________________-->
            <TextBlock x:Name="NotConnected"
                    Grid.RowSpan="100"
                    Text="NOT CONNECTED" 
                    FontSize="15" 
                    HorizontalAlignment="Center" 
                    VerticalAlignment="Center" 
                    Foreground="Red" 
                    FontWeight="Bold"
                    Visibility="{Binding Connected, Converter={StaticResource BoolToInVisible_Converter}}"
                    RenderTransformOrigin="0.5,0.5" >
                <TextBlock.LayoutTransform>
                    <RotateTransform Angle="-70"/>
                </TextBlock.LayoutTransform>
            </TextBlock>

            <TextBlock x:Name="Flushed"
                    Grid.RowSpan="100"
                    Text="FLUSHED" 
                    FontSize="15" 
                    HorizontalAlignment="Center" 
                    VerticalAlignment="Center" 
                    Foreground="Orange" 
                    FontWeight="Bold"
                    Visibility="{Binding Flushed, Converter={StaticResource BoolToVisible_Converter}}"
                    RenderTransformOrigin="0.5,0.5" >
                <TextBlock.LayoutTransform>
                    <RotateTransform Angle="-70"/>
                </TextBlock.LayoutTransform>
            </TextBlock>

        </Grid>
    </CheckBox>
</UserControl>
