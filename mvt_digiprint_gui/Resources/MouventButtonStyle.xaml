<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:common="clr-namespace:RX_Common;assembly=rx_common_lib_cs"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="MouventStyle.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="Mouvent.CommandButtonOuterCircle" Color="White"/>
    <SolidColorBrush x:Key="Mouvent.CommandButtonInnerCircle" Color="{StaticResource Mouvent.MainColor}"/>
    <SolidColorBrush x:Key="Mouvent.CommandButtonMouseOverOuterCircle" Color="White"/>
    <SolidColorBrush x:Key="Mouvent.CommandButtonMouseOverInnerCircle" Color="{StaticResource Mouvent.MainColor}"/>
    <SolidColorBrush x:Key="Mouvent.CommandButtonPressedOuterCircle" Color="White"/>
    <SolidColorBrush x:Key="Mouvent.CommandButtonPressedInnerCircle" Color="Orange"/>
    <SolidColorBrush x:Key="Mouvent.CommandButtonBusyOuterCircle" Color="White"/>
    <SolidColorBrush x:Key="Mouvent.CommandButtonBusyInnerCircle" Color="Orange"/>
    <SolidColorBrush x:Key="Mouvent.CommandButtonDisabledIcon" Color="White" Opacity="0.5"/>
    <SolidColorBrush x:Key="Mouvent.CommandButtonDisabledIcon_Inverted" Color="{StaticResource Mouvent.MainColor}" Opacity="0.5"/>
    <SolidColorBrush x:Key="Mouvent.InfoButtonMouseOverOuterCircle" Color="{StaticResource Mouvent.MainColor}"/>
    <SolidColorBrush x:Key="Mouvent.InfoButtonPressedOuterCircle" Color="White" Opacity="0.5"/>
    <SolidColorBrush x:Key="Mouvent.InfoButtonPressedInnerCircle" Color="Orange" Opacity="0.5"/>

    <SolidColorBrush x:Key="Mouvent.WhiteTransparentBrush" Color="White" Opacity="0.5"/>
    <SolidColorBrush x:Key="Mouvent.MainColorTransparentBrush" Color="{StaticResource Mouvent.MainColor}" Opacity="0.5"/>

    <Style x:Key="LargeCheckBox" TargetType="CheckBox">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border"  
              Width="20" 
              Height="20" 
              CornerRadius="0" 
              Background="Transparent"
              BorderThickness="1"
              BorderBrush="Gray">
                                <Path 
                Width="15" Height="15" 
                x:Name="CheckMark"
                SnapsToDevicePixels="False" 
                Stroke="Gray"
                StrokeThickness="2"
                Data="M 0 0 L 15 15 M 0 15 L 15 0" />
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="10,0,0,0"
            VerticalAlignment="Center"
            HorizontalAlignment="Left"
            RecognizesAccessKey="True"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckMark" Property="Data" Value="M 0 15 L 15 0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="Gray" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="Gray" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="WhiteSmoke" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="LightGray" />
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="Mouvent.RoundIconButtonStyle.DarkBackgroundButton.SizeL" TargetType="{x:Type common:MvtButton}">
        <Setter Property ="Template">
            <Setter.Value>
                <ControlTemplate TargetType ="{x:Type common:MvtButton}">
                    <Grid>
                        <Ellipse HorizontalAlignment="Center" VerticalAlignment="Center"
                                 Name ="Ring" Width ="50" Height ="50" Fill ="Transparent"
                                 Stroke="White" StrokeThickness="2"/>
                        <Ellipse x:Name="BusyEllipse"
                                 HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width ="50" Height ="50"
                                 Fill="Transparent" Visibility="Hidden" RenderTransformOrigin="0.5,0.5"
                                 StrokeThickness="3" 
                                 >
                            <Ellipse.Stroke>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="White" Offset="0.8"/>
                                    <GradientStop Color="Orange" Offset="0.4"/>
                                </LinearGradientBrush>
                            </Ellipse.Stroke>
                            <Ellipse.RenderTransform>
                                <RotateTransform Angle="0"/>
                            </Ellipse.RenderTransform>
                        </Ellipse>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="common:MvtButton.IsChecked" Value="True">
                            <Setter TargetName="Ring" Property ="Stroke" Value="Orange"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Ring" Property ="Stroke" Value="{StaticResource Mouvent.WhiteTransparentBrush}"></Setter>
                        </Trigger>
                        <Trigger Property ="IsMouseOver" Value ="True">
                            <Setter TargetName ="Ring" Property ="StrokeThickness" Value="3"/>
                        </Trigger>
                        <Trigger Property ="IsPressed" Value ="True">
                            <Setter TargetName ="Ring" Property ="Fill" Value="Orange"/>
                        </Trigger>
                        <Trigger Property="common:MvtButton.IsBusy" Value="True">
                            <Setter TargetName="BusyEllipse" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Ring" Property="Visibility" Value="Hidden"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="BusyEllipse"
                                            Storyboard.TargetProperty="RenderTransform.Angle"
                                            From="0"
                                            To="360"
                                            Duration="0:0:2"
                                            RepeatBehavior="Forever" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="common:MvtButton.IsBusy" Value="False">
                            <Setter TargetName="BusyEllipse" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="Ring" Property="Visibility" Value="Visible"/>

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Mouvent.RoundIconButtonStyle.DarkBackgroundButton.SizeXL" TargetType="{x:Type common:MvtButton}">
        <Setter Property ="Template">
            <Setter.Value>
                <ControlTemplate TargetType ="{x:Type common:MvtButton}">
                    <Grid>
                        <Ellipse HorizontalAlignment="Center" VerticalAlignment="Center"
                                 Name ="Ring" Width ="80" Height ="80" Fill ="Transparent"
                                 Stroke="White" StrokeThickness="2"/>
                        <Ellipse x:Name="BusyEllipse"
                                 HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width ="80" Height ="80"
                                 Fill="Transparent" Visibility="Hidden" RenderTransformOrigin="0.5,0.5"
                                 StrokeThickness="3" 
                                 >
                            <Ellipse.Stroke>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="White" Offset="0.8"/>
                                    <GradientStop Color="Orange" Offset="0.4"/>
                                </LinearGradientBrush>
                            </Ellipse.Stroke>
                            <Ellipse.RenderTransform>
                                <RotateTransform Angle="0"/>
                            </Ellipse.RenderTransform>
                        </Ellipse>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="common:MvtButton.IsChecked" Value="True">
                            <Setter TargetName="Ring" Property ="Stroke" Value="Orange"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Ring" Property ="Stroke" Value="{StaticResource Mouvent.WhiteTransparentBrush}"></Setter>
                        </Trigger>
                        <Trigger Property ="IsMouseOver" Value ="True">
                            <Setter TargetName ="Ring" Property ="StrokeThickness" Value="3"/>
                        </Trigger>
                        <Trigger Property ="IsPressed" Value ="True">
                            <Setter TargetName ="Ring" Property ="Fill" Value="Orange"/>
                        </Trigger>
                        <Trigger Property="common:MvtButton.IsBusy" Value="True">
                            <Setter TargetName="BusyEllipse" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Ring" Property="Visibility" Value="Hidden"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="BusyEllipse"
                                            Storyboard.TargetProperty="RenderTransform.Angle"
                                            From="0"
                                            To="360"
                                            Duration="0:0:2"
                                            RepeatBehavior="Forever" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="common:MvtButton.IsBusy" Value="False">
                            <Setter TargetName="BusyEllipse" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="Ring" Property="Visibility" Value="Visible"/>

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Mouvent.RoundIconButtonStyle.LightIcon" TargetType="iconPacks:PackIconMaterial">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource Mouvent.CommandButtonDisabledIcon}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="Mouvent.RoundIconButtonStyle.LightIconM" TargetType="iconPacks:PackIconMaterial" BasedOn="{StaticResource Mouvent.RoundIconButtonStyle.LightIcon}">
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20"/>
    </Style>
    
    <Style x:Key="Mouvent.RoundIconButtonStyle.LightIconOcticons" TargetType="iconPacks:PackIconOcticons">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource Mouvent.CommandButtonDisabledIcon}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="Mouvent.RoundIconButtonStyle.LightIconPicol" TargetType="iconPacks:PackIconPicolIcons">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource Mouvent.CommandButtonDisabledIcon}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="Mouvent.RoundIconButtonStyle.LightIconBoxIcons" TargetType="iconPacks:PackIconBoxIcons">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource Mouvent.CommandButtonDisabledIcon}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Mouvent.RoundIconButtonStyle.LightFontAwesomeIcon" TargetType="iconPacks:PackIconFontAwesome">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource Mouvent.CommandButtonDisabledIcon}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Mouvent.RoundIconButtonStyle.LightJamIcon" TargetType="iconPacks:PackIconJamIcons">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource Mouvent.CommandButtonDisabledIcon}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Mouvent.RoundIconButtonStyle.LightModernIcon" TargetType="iconPacks:PackIconModern">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource Mouvent.CommandButtonDisabledIcon}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Mouvent.RoundIconButtonStyle.LightModernUVLampIcon" TargetType="iconPacks:PackIconModern">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource Mouvent.CommandButtonDisabledIcon}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Mouvent.RoundIconButtonStyle.LightBackgroundButton.SizeL" TargetType="{x:Type common:MvtButton}">
        <Setter Property ="Template">
            <Setter.Value>
                <ControlTemplate TargetType ="{x:Type common:MvtButton}">
                    <Grid>
                        <Ellipse Name ="Ring" Width ="50" Height ="50" Fill ="White"
                                 Stroke="{StaticResource Mouvent.MainColorBrush}" StrokeThickness="2"/>
                        <Ellipse Name="BusyEllipse"
                                 HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width ="50" Height ="50"
                                 Fill="Transparent" Visibility="Hidden" RenderTransformOrigin="0.5,0.5"
                                 StrokeThickness="3" 
                                 >
                            <Ellipse.Stroke>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="{StaticResource Mouvent.OrangeColor}" Offset="0.8"/>
                                    <GradientStop Color="{StaticResource Mouvent.MainColor}" Offset="0.4"/>
                                </LinearGradientBrush>
                            </Ellipse.Stroke>
                            <Ellipse.RenderTransform>
                                <RotateTransform Angle="0"/>
                            </Ellipse.RenderTransform>
                        </Ellipse>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Ring"  Property ="Stroke" Value="{StaticResource Mouvent.MainColorTransparentBrush}"></Setter>
                        </Trigger>
                        <Trigger Property ="IsMouseOver" Value ="True">
                            <Setter TargetName ="Ring" Property ="StrokeThickness" Value="3"/>
                        </Trigger>
                        <Trigger Property ="IsPressed" Value ="True">
                            <Setter TargetName ="Ring" Property ="Fill" Value="{StaticResource Mouvent.OrangeColorBrush}"/>
                        </Trigger>
                        <Trigger Property="common:MvtButton.IsChecked" Value ="True">
                            <Setter TargetName ="Ring" Property ="Stroke" Value="{StaticResource Mouvent.OrangeColorBrush}"/>
                        </Trigger>
                        <Trigger Property="common:MvtButton.IsBusy" Value="True">
                            <Setter TargetName="BusyEllipse" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Ring" Property="Visibility" Value="Hidden"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="BusyEllipse"
                                            Storyboard.TargetProperty="RenderTransform.Angle"
                                            From="0"
                                            To="360"
                                            Duration="0:0:2"
                                            RepeatBehavior="Forever" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="common:MvtButton.IsBusy" Value="False">
                            <Setter TargetName="BusyEllipse" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="Ring" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Mouvent.RoundIconButtonStyle.LightBackgroundButton.SizeM" TargetType="{x:Type common:MvtButton}">
        <Setter Property ="Template">
            <Setter.Value>
                <ControlTemplate TargetType ="{x:Type common:MvtButton}">
                    <Grid>
                        <Ellipse Name ="Ring" Width ="40" Height ="40" Fill ="White"
                                 Stroke="{StaticResource Mouvent.MainColorBrush}" StrokeThickness="2"/>
                        <Ellipse Name="BusyEllipse"
                                 HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width ="50" Height ="50"
                                 Fill="Transparent" Visibility="Hidden" RenderTransformOrigin="0.5,0.5"
                                 StrokeThickness="3" 
                                 >
                            <Ellipse.Stroke>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="{StaticResource Mouvent.OrangeColor}" Offset="0.8"/>
                                    <GradientStop Color="{StaticResource Mouvent.MainColor}" Offset="0.4"/>
                                </LinearGradientBrush>
                            </Ellipse.Stroke>
                            <Ellipse.RenderTransform>
                                <RotateTransform Angle="0"/>
                            </Ellipse.RenderTransform>
                        </Ellipse>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Ring"  Property ="Stroke" Value="{StaticResource Mouvent.MainColorTransparentBrush}"></Setter>
                        </Trigger>
                        <Trigger Property ="IsMouseOver" Value ="True">
                            <Setter TargetName ="Ring" Property ="StrokeThickness" Value="3"/>
                        </Trigger>
                        <Trigger Property ="IsPressed" Value ="True">
                            <Setter TargetName ="Ring" Property ="Fill" Value="{StaticResource Mouvent.OrangeColorBrush}"/>
                        </Trigger>
                        <Trigger Property="common:MvtButton.IsChecked" Value ="True">
                            <Setter TargetName ="Ring" Property ="Stroke" Value="{StaticResource Mouvent.OrangeColorBrush}"/>
                        </Trigger>
                        <Trigger Property="common:MvtButton.IsBusy" Value="True">
                            <Setter TargetName="BusyEllipse" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Ring" Property="Visibility" Value="Hidden"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="BusyEllipse"
                                            Storyboard.TargetProperty="RenderTransform.Angle"
                                            From="0"
                                            To="360"
                                            Duration="0:0:2"
                                            RepeatBehavior="Forever" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="common:MvtButton.IsBusy" Value="False">
                            <Setter TargetName="BusyEllipse" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="Ring" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <Style x:Key="Mouvent.RoundIconButtonStyle.LightBackgroundButton.SizeS" TargetType="{x:Type common:MvtButton}">
        <Setter Property ="Template">
            <Setter.Value>
                <ControlTemplate TargetType ="{x:Type common:MvtButton}">
                    <Grid>
                        <Ellipse Name ="Ring" Width ="40" Height ="40" Fill ="Transparent"
                                 Stroke="{StaticResource Mouvent.MainColorBrush}" StrokeThickness="2"/>
                        <Ellipse Name="BusyEllipse"
                                 HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width ="50" Height ="50"
                                 Fill="Transparent" Visibility="Hidden" RenderTransformOrigin="0.5,0.5"
                                 StrokeThickness="3" 
                                 >
                            <Ellipse.Stroke>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="{StaticResource Mouvent.OrangeColor}" Offset="0.8"/>
                                    <GradientStop Color="{StaticResource Mouvent.MainColor}" Offset="0.4"/>
                                </LinearGradientBrush>
                            </Ellipse.Stroke>
                            <Ellipse.RenderTransform>
                                <RotateTransform Angle="0"/>
                            </Ellipse.RenderTransform>
                        </Ellipse>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Ring"  Property ="Stroke" Value="{StaticResource Mouvent.MainColorTransparentBrush}"></Setter>
                        </Trigger>
                        <Trigger Property ="IsMouseOver" Value ="True">
                            <Setter TargetName ="Ring" Property ="StrokeThickness" Value="3"/>
                        </Trigger>
                        <Trigger Property ="IsPressed" Value ="True">
                            <Setter TargetName ="Ring" Property ="Fill" Value="{StaticResource Mouvent.OrangeColorBrush}"/>
                        </Trigger>
                        <Trigger Property="common:MvtButton.IsChecked" Value ="True">
                            <Setter TargetName ="Ring" Property ="Stroke" Value="{StaticResource Mouvent.OrangeColorBrush}"/>
                        </Trigger>
                        <Trigger Property="common:MvtButton.IsBusy" Value="True">
                            <Setter TargetName="BusyEllipse" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Ring" Property="Visibility" Value="Hidden"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="BusyEllipse"
                                            Storyboard.TargetProperty="RenderTransform.Angle"
                                            From="0"
                                            To="360"
                                            Duration="0:0:2"
                                            RepeatBehavior="Forever" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="common:MvtButton.IsBusy" Value="False">
                            <Setter TargetName="BusyEllipse" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="Ring" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Mouvent.RoundIconButtonStyle.ExpandCollapseButton" TargetType="{x:Type common:MvtButton}">
        <Setter Property ="Template">
            <Setter.Value>
                <ControlTemplate TargetType ="{x:Type common:MvtButton}">
                    <Grid>
                        <Ellipse Name ="Ring" Width ="40" Height ="40" Fill ="{StaticResource Mouvent.MainColorBrush}"
                                 Stroke="{StaticResource Mouvent.MainColorBrush}" StrokeThickness="2"/>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Mouvent.RoundIconButtonStyle.ExpandCollapseIcon" TargetType="iconPacks:PackIconMaterial">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
    </Style>

    <Style x:Key="Mouvent.RoundIconButtonStyle.LightBackgroundInfoButton.SizeL" TargetType="{x:Type common:MvtButton}">
        <Setter Property ="Template">
            <Setter.Value>
                <ControlTemplate TargetType ="{x:Type common:MvtButton}">
                    <Grid Background="Transparent">
                        <Ellipse Name ="OuterCircle" Width ="52" Height ="52" Fill ="White"/>
                        <Ellipse Name ="InnerCircle" Width ="50" Height ="50" Fill ="{StaticResource Mouvent.MainColorBrush}"/>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName ="OuterCircle" Property ="Opacity" Value="0.5"/>
                            <Setter TargetName ="InnerCircle" Property ="Opacity" Value="0.5"/>
                        </Trigger>
                        <Trigger Property ="IsMouseOver" Value ="True">
                            <Setter TargetName ="OuterCircle" Property ="Fill" Value="{StaticResource Mouvent.InfoButtonMouseOverOuterCircle}"/>
                        </Trigger>
                        <Trigger Property ="IsPressed" Value ="True">
                            <Setter TargetName ="OuterCircle" Property ="Fill" Value="{StaticResource Mouvent.InfoButtonPressedOuterCircle}"/>
                            <Setter TargetName ="InnerCircle" Property ="Fill" Value="{StaticResource Mouvent.InfoButtonPressedInnerCircle}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Mouvent.RoundIconButtonStyle.DarkIcon" TargetType="iconPacks:PackIconMaterial">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource Mouvent.MainColorBrush}" />
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="{Binding Height}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource Mouvent.CommandButtonDisabledIcon_Inverted}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Mouvent.MainColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Mouvent.RoundIconButtonStyle.DarkEntypoIcon" TargetType="iconPacks:PackIconEntypo">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource Mouvent.MainColorBrush}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource Mouvent.CommandButtonDisabledIcon_Inverted}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Mouvent.MainColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    

    <Style x:Key="Mouvent.RoundIconButtonStyle.DarkFontAwsomeIcon" TargetType="iconPacks:PackIconFontAwesome">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource Mouvent.MainColorBrush}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource Mouvent.CommandButtonDisabledIcon_Inverted}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Mouvent.MainColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Mouvent.RoundIconButtonStyle.DarkUniconsIcon" TargetType="iconPacks:PackIconUnicons">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource Mouvent.MainColorBrush}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource Mouvent.CommandButtonDisabledIcon_Inverted}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Mouvent.MainColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Mouvent.RoundIconButtonStyle.DarkJamIcon" TargetType="iconPacks:PackIconJamIcons">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource Mouvent.MainColorBrush}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource Mouvent.CommandButtonDisabledIcon_Inverted}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Mouvent.MainColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Mouvent.Alignment.PrintHeadColorButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent">
                        <Ellipse HorizontalAlignment="Center" VerticalAlignment="Center" Width="10" Height ="10"
                                 Fill ="{TemplateBinding BorderBrush}"
                                 Stroke="{TemplateBinding Background}" StrokeThickness="1"/>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Mouvent.Alignment.ImageButtonTemplate" TargetType="{x:Type Button}">
        <Setter Property ="Template">
            <Setter.Value>
                <ControlTemplate TargetType ="{x:Type Button}">
                    <Grid>
                        <Rectangle Name ="ImageButtonBorder" Width="auto" Height="auto" Fill="White" Stroke="Gray"/>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property ="IsMouseOver" Value ="True">
                            <Setter TargetName ="ImageButtonBorder" Property ="Fill" Value="LightGray" />
                            <Setter TargetName="ImageButtonBorder" Property="Stroke" Value="LightGray"></Setter>
                        </Trigger>
                        <Trigger Property ="IsPressed" Value ="True">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="Mouvent.Alignment.InkSupplySelectionButtonStyle" TargetType="{x:Type common:MvtButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type common:MvtButton}">
                    <Grid Background="Transparent">
                        <Rectangle Fill="Transparent" Width="30"></Rectangle>
                        <Ellipse HorizontalAlignment="Center" VerticalAlignment="Center" Name ="InkSupplyColorIconOuterEllipse" Width ="22" Height ="22" Fill ="{TemplateBinding BorderBrush}"/>
                        <Ellipse HorizontalAlignment="Center" VerticalAlignment="Center" Name ="InkSupplyColorIconInnerEllipse" Width ="20" Height ="20" Fill ="{TemplateBinding BorderBrush}"/>
                        <Ellipse HorizontalAlignment="Center" VerticalAlignment="Center" Name ="InkSupplyColorIconInkEllipse" Width ="18" Height ="18" Fill ="{TemplateBinding BorderBrush}"/>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property ="IsMouseOver" Value ="True">
                            <Setter TargetName="InkSupplyColorIconOuterEllipse" Property="Fill" Value="{StaticResource Mouvent.MainColorBrush}"></Setter>
                            <Setter TargetName="InkSupplyColorIconInnerEllipse" Property="Fill" Value="White"></Setter>
                        </Trigger>
                        <Trigger Property ="IsPressed" Value ="True">
                        </Trigger>
                        <Trigger Property ="common:MvtButton.IsChecked" Value ="True">
                            <Setter TargetName="InkSupplyColorIconOuterEllipse" Property="Fill" Value="{StaticResource Mouvent.MainColorBrush}"></Setter>
                            <Setter TargetName="InkSupplyColorIconInnerEllipse" Property="Fill" Value="White"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Mouvent.LogEntryColorButtonStyle" TargetType="Button">
        <Setter Property ="Template">
            <Setter.Value>
                <ControlTemplate TargetType ="{x:Type Button}">
                    <Grid Background="Transparent">
                        <Ellipse  HorizontalAlignment="Center" VerticalAlignment="Center" Name ="Ellipse" Width ="16" Height ="16" Fill ="#ffeaeaea"/>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Mouvent.LogEntryWarningColorButtonStyle" TargetType="Button">
        <Setter Property ="Template">
            <Setter.Value>
                <ControlTemplate TargetType ="{x:Type Button}">
                    <Grid Background="Transparent">
                        <Ellipse HorizontalAlignment="Center" VerticalAlignment="Center" Name ="Ellipse" Width ="16" Height ="16" Fill ="Gold"/>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Mouvent.LogEntryErrorColorButtonStyle" TargetType="Button">
        <Setter Property ="Template">
            <Setter.Value>
                <ControlTemplate TargetType ="{x:Type Button}">
                    <Grid Background="Transparent">
                        <Ellipse  HorizontalAlignment="Center" VerticalAlignment="Center" Name ="Ellipse" Width ="16" Height ="16" Fill ="Crimson"/>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Mouvent.Alignment.ColorSelectionButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="ButtonBorder" Margin="0, 10, 10, 10" BorderBrush="{StaticResource Mouvent.MainColorBrush}" BorderThickness="2" CornerRadius="4">
                        <StackPanel Orientation="Horizontal">
                           <TextBlock x:Name="ButtonText" Foreground="{StaticResource Mouvent.MainColorBrush}" Margin="5" Text="{TemplateBinding Content}"></TextBlock>
                           <Ellipse Width="15" Height="15" Margin="10,0,10,0" x:Name="ButtonColorEllipse" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" Fill="{TemplateBinding Background}"></Ellipse>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property ="IsChecked" Value ="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource Mouvent.MainColorBrush}"/>
                            <Setter TargetName="ButtonText" Property="Foreground" Value="WhiteSmoke"/>
                            <Setter TargetName="ButtonColorEllipse" Property="Stroke" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property ="IsChecked" Value ="False">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="Transparent"/>
                            <Setter TargetName="ButtonText" Property="Foreground" Value="{StaticResource Mouvent.MainColorBrush}"/>
                            <Setter TargetName="ButtonColorEllipse" Property="Stroke" Value="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="Mouvent.Alignment.InkCylinderSelectionButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="ButtonBorder" Margin="0, 10, 10, 10" BorderBrush="Gray" BorderThickness="2" CornerRadius="4">
                        <TextBlock x:Name="ButtonText" Foreground="Gray" Margin="5" Text="{TemplateBinding Content}"></TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property ="IsChecked" Value ="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="Gray"/>
                            <Setter TargetName="ButtonText" Property="Foreground" Value="WhiteSmoke"/>
                        </Trigger>
                        <Trigger Property ="IsChecked" Value ="False">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="Transparent"/>
                            <Setter TargetName="ButtonText" Property="Foreground" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>