<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:igGrids="http://infragistics.com/DataPresenter"
    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:AvalonLambdas="http://schemas.AvalonLambdas/AvalonLambdas"
    xmlns:models="clr-namespace:RxWfTool.Models"
    xmlns:ig="http://schemas.infragistics.com/xaml"
    >
    <!-- :converters="clr-namespace:RxWfTool.Converters" -->

    <!--Definition diverse Brushes zur Verwendung in Cell-Style (kann evtl. separat ausgelagert werden in Brushes.xaml-Resourcedatei oder ähnlich-->
	<SolidColorBrush x:Key="CellItemNormalBackgroundBrush" Color="White"/>     <!--  <SolidColorBrush x:Key="CellItemMouseOverBackgroundBrush" Color="#FF858585"/>  -->
    <!-- <SolidColorBrush x:Key="CellItemMouseOverBackgroundBrush" Color="Red"/> -->
    <!-- <SolidColorBrush x:Key="CellItemAltNormalBackgroundBrush" Color="LightGreen"/> -->
	<!-- <SolidColorBrush x:Key="CellItemAltNormalBackgroundBrush" Color="#FFF9F9F9"/> -->
	<!-- <SolidColorBrush x:Key="CellItemSelectedBackgroundBrush" Color="#66000000"/> -->
    <SolidColorBrush x:Key="HeaderCellItemNormalBackgroundBrush" Color="#FFF4F4F4"/>

    <!-- <Border x:Key="CellBorder" BorderBrush="{StaticResource CellItemNormalBackgroundBrush}" BorderThickness="0,0,1,1" /> -->

    <Style TargetType="{x:Type igGrids:CellValuePresenter}" x:Key="ProductImage">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igGrids:CellValuePresenter}">
                    <Grid 
                        Width   ="{TemplateBinding Width}" 
                        Height  ="{TemplateBinding Height}"
                        >
                        <Image 
                            Margin              ="{TemplateBinding Padding}" 
							HorizontalAlignment ="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment   ="{TemplateBinding VerticalContentAlignment}"
							Source              ="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                        />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- XamGrid HeaderStyle -->
    <Style x:Key="XamGridHeaderStyle" TargetType="{x:Type igPrim:HeaderCellControl}">
        <Setter Property="FontSize"     Value="14.666" />
        <Setter Property="Background"   Value="{StaticResource HeaderCellItemNormalBackgroundBrush}"/>
        <Setter Property="IsEnabled"    Value="False"/>
    </Style>

 	<Style x:Key="XamGridCellStyle" TargetType="{x:Type ig:CellControl}">
		<Setter Property="FontSize"     Value="14.666" />
		<Setter Property="Foreground"   Value="#ff303030" />
    </Style>

    <!-- colors ________________________________________________________________________________________________________________-->
    <SolidColorBrush x:Key="XamGrid_Normal"     Color="White"/>
    <SolidColorBrush x:Key="XamGrid_Alternate"  Color="#7FF6F9FC"/>
    <SolidColorBrush x:Key="XamGrid_MouseOver"  Color="#FFE6EFF7"/>

    <SolidColorBrush x:Key="XamGrid_LOG_Normal"     Color="White"/>
    <SolidColorBrush x:Key="XamGrid_LOG_Alternate"  Color="#7FF6F9FC"/>
    <SolidColorBrush x:Key="XamGrid_LOG_MouseOver"  Color="#FFE6EFF7"/>
    
    <SolidColorBrush x:Key="XamGrid_WRN_Normal"     Color="#FFF5F506"/>
    <SolidColorBrush x:Key="XamGrid_WRN_Alternate"  Color="{DynamicResource Color_046}"/>
    <SolidColorBrush x:Key="XamGrid_WRN_MouseOver"  Color="#FFE6EFF7"/>

    <SolidColorBrush x:Key="XamGrid_ERR_Normal"     Color="#FFFF4F4F"/>
    <SolidColorBrush x:Key="XamGrid_ERR_Alternate"  Color="#FFF94736"/>
    <SolidColorBrush x:Key="XamGrid_ERR_MouseOver"  Color="#FFE6EFF7"/>

    <SolidColorBrush x:Key="XamGrid_Selected"       Color="#FFA7DFF4"/>


    <!-- XamGrid CellControlStyle -->
    <Style x:Key="XamGridCellControlStyle" TargetType="{x:Type ig:CellControl}" BasedOn="{StaticResource XamGridCellStyle}" >
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="#FFC9CACA"/>
        <!--    <Setter Property="BorderThickness" Value="0,0,1,1"/> -->
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ig:CellControl}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="AltMouseOver" Duration="0" >
                                            <DiscreteObjectKeyFrame Value="{StaticResource XamGrid_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Alternate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="AltMouseOver" Duration="0" >
                                            <DiscreteObjectKeyFrame Value="{StaticResource XamGrid_Alternate}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="NotSelected"/>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ActiveSelected" Duration="0" >
                                            <DiscreteObjectKeyFrame Value="{StaticResource XamGrid_Selected}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="InActive"/>
                                <VisualState x:Name="Active" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="AltMouseOver" Margin="{TemplateBinding BorderThickness}"/>
                        <Border x:Name="ActiveSelected" BorderBrush="#FF6DBDD1"/>
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- XamGrid XamGridLogCellControlStyle ____________________________________________________________________________________________ -->
    <Style x:Key="XamGridLogCellControlStyle" TargetType="{x:Type ig:CellControl}" BasedOn="{StaticResource XamGridCellStyle}" >
        <Setter Property="VerticalContentAlignment"     Value="Center"/>
        <Setter Property="HorizontalContentAlignment"   Value="Left"/>
        <Setter Property="BorderThickness"              Value="0"/>
        <Setter Property="Padding"                      Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ig:CellControl}">
                    <Grid x:Name="grid" Background="{TemplateBinding Background}">
                        <ContentPresenter 
                            ContentTemplate     ="{TemplateBinding ContentTemplate}" 
                            Content             ="{TemplateBinding Content}" 
                            ContentStringFormat ="{TemplateBinding ContentStringFormat}" 
                            HorizontalAlignment ="{TemplateBinding HorizontalContentAlignment}" 
                            VerticalAlignment   ="{TemplateBinding VerticalContentAlignment}" 
                            Margin              ="4,0"/>
                            <!-- Margin="{TemplateBinding Padding}" -->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="grid" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(models:RxCellControl.MouseOverBrush)}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
        
</ResourceDictionary>
